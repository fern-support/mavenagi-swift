import Foundation

/// A structured object generated by the bot in response to a schema-based generateObject request. Should be rendered as JSON.
public struct BotObjectResponse: Codable, Hashable, Sendable {
    /// A human-readable name for the generated object, for use in the UI.
    public let label: String?
    /// The generated object conforming to the provided schema.
    public let object: JSONValue
    /// Additional properties that are not explicitly defined in the schema
    public let additionalProperties: [String: JSONValue]

    public init(
        label: String? = nil,
        object: JSONValue,
        additionalProperties: [String: JSONValue] = .init()
    ) {
        self.label = label
        self.object = object
        self.additionalProperties = additionalProperties
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        self.label = try container.decodeIfPresent(String.self, forKey: .label)
        self.object = try container.decode(JSONValue.self, forKey: .object)
        self.additionalProperties = try decoder.decodeAdditionalProperties(using: CodingKeys.self)
    }

    public func encode(to encoder: Encoder) throws -> Void {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try encoder.encodeAdditionalProperties(self.additionalProperties)
        try container.encodeIfPresent(self.label, forKey: .label)
        try container.encode(self.object, forKey: .object)
    }

    /// Keys for encoding/decoding struct properties.
    enum CodingKeys: String, CodingKey, CaseIterable {
        case label
        case object
    }
}